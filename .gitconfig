[core]
	excludesfile = ~/.gitignore

	# unix
	autocrlf = input

	# windows
	# autocrlf = true

[rebase]
	autoSquash = true

[alias]
	h = help

	st = status
	s = "status -sb"

	a = "add"
	aa = "add --all :/"
	ai = "add --interactive"
	ap = "add --patch"

	unadd = reset HEAD --
	unstage = reset HEAD --

	hide = update-index --skip-worktree
	unhide = update-index --no-skip-worktree
	ls-hidden = !git ls-files -v|grep '^[Sh]' # S - skip-noworktree , h - assume-unchanged

	ci = commit

	amend = commit --amend

	co = checkout

	br = branch
	b = branch

	incoming = !(git fetch && git whatchanged ..@{u})
	in = !git incoming

	outgoing = whatchanged @{u}..
	out = !git outgoing

	f = fetch

	l = log --oneline
	lg = log --oneline --pretty=format:\"%C(auto)%h%C(reset)%C(blue)%d%C(reset) %s (%an %ad)\" --name-only --graph --date=relative
	lg2 = log --oneline --decorate --all --graph
	ls = log --decorate --oneline
	ll = log --decorate --numstat --format=fuller

	g = grep
	ack = grep --break --heading --line-number

	d = diff
	dc = diff --cached
	dplain = diff --word-diff=plain
	dt = difftool

	m = merge
	mt = mergetool

	cl = clone
	flat = clone --depth 1
	fl = !git flat
	unflat = pull --unshallow
	unshallow = !git unflat

	initial = !git ci --allow-empty -m \"Initial commit (empty)\"  && git tag initial -m \"Initial tag (empty)\"

	mkrepo = !git init && git initial && git aa && git ci

	upd = "!f() { git add -A && git commit -m "Update"; } ; f"

[diff]
	algorithm = patience

	# Tell git diff to use mnemonic prefixes (i)ndex, (w)ork tree, (c)ommit, (o)bject
	# instead of the standard "a/" and "b/" notation.
	mnemonicprefix = true
